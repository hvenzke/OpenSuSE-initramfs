#!/bin/sh
#
# file : /sbin/mkBusyBoxinitramfs
# part of https://github.com/remsnet/OpenSuSE-initramfs
#
# v0.0.3  - 22 june 2014
# Author : Remsnet Consulting & internet Services LTD
#          horst.venzke@remsnet.de
# License : LGPL v2


# ENV
KERNEL_VERSION=`ls /boot/vmlinuz-* | xargs | awk -F " " '{ print $1 }' | sed "s#/boot/vmlinuz-##"`
BOOT=/boot
INITRAMFS_FILE=$BOOT/initramfs.img-$KERNEL_VERSION
DATADIR=/usr/share/mkinitramfs
INITIN=$DATADIR/BusyBoxramfs.init
CPIOBIN=/usr/bin/cpio
GZIPBIN=/usr/bin/gzip
PATH=$PATH:/bin:/sbin:/usr/bin:/usr/sbin
export PATH

WDIR=$(mktemp -d /tmp/initrd-work.XXXXXXXXXX)
unsorted=$(mktemp /tmp/unsorted.XXXXXXXXXX)

binfiles=""
sbinfiles="lvm"

# we log what happen - xen-tools 24-setup-initramfs autoinstall hook
test -d /var/log/xen-tools || mkdir -p /var/log/xen-tools/
touch /var/log/xen-tools/initramfs.log

# functions
function copy() {

       cp -fp $1 $2  >> /var/log/xen-tools/initramfs.log 2>&1
}

function copyall() {

       cp -rfp $1 $2 >> /var/log/xen-tools/initramfs.log 2>&1
}

function cleanup() {
# cleanup workdir and unsorted
        rm -rf $WDIR $unsorted
}

function make_initramfs() {

( cd $WDIR ; find . | $CPIOBIN -o -H newc --quiet | $GZIPBIN -9 ) > $INITRAMFS_FILE

}

if [ -n "$KERNEL_VERSION" ] && [ ! -d "/lib/modules/$1" ] ; then
  echo "No modules directory named $1"
  exit 1
fi

function msg_start(){
printf "Creating $INITRAMFS_FILE... "
printf " \n \n"
}

function msg_end(){
printf "Creating $INITRAMFS_FILE completed..."
printf " \n \n"
}


# install script $INITIN  as /init
install -m 755 $INITIN $WDIR/init

# Systemd installs udevadm in /bin. Other udev implementations have it in /sbin
msg_start
#
if [ -x /sbin/udevadm ] ; then binfiles="$binfiles"; fi


# Create base directory structure
mkdir -p $WDIR/{bin,dev,lib/firmware,run,sys,proc,usr/share/mkinitramfs,newroot}
mkdir -p $WDIR/etc/{modprobe.d,udev/rules.d}

touch $WDIR/etc/modprobe.d/modprobe.conf
touch $WDIR/etc/mdev.conf

cd $WDIR
ln -s bin sbin
cd
cd $WDIR
ln -s lib $WDIR/lib64
cd
cd $WDIR/usr
 ln -s ../bin bin
 ln -s ../sbin sbin
 ln -s ../lib lib
cd

# Create necessary device nodes
mknod -m 640 $WDIR/dev/console c 5 1
mknod -m 640 $WDIR/dev/random c 1 8
mknod -m 640 $WDIR/dev/urandom c 1 9
mknod -m 664 $WDIR/dev/null    c 1 3
mknod -m 664 $WDIR/dev/zero    c 1 5
mknod -m 664 $WDIR/dev/tty     c 5 0
mknod -m 664 $WDIR/dev/tty1    c 4 1
mknod -m 664 $WDIR/dev/vcs     c 7 0
mknod -m 664 $WDIR/dev/vcsa    c 7 128
mknod -m 664 $WDIR/dev/xvda    b 202 0
mknod -m 664 $WDIR/dev/loop0   b 7 0

# Install the udev configuration files
if [ -f /etc/udev/udev.conf ]; then
  copy /etc/udev/udev.conf $WDIR/etc/udev/udev.conf
fi

for file in $(find /etc/udev/rules.d/ -type f) ; do
  copy $file $WDIR/etc/udev/rules.d
done

# Install any firmware present
 copyall /lib/firmware $WDIR/lib

# Copy the RAID configuration file if present
if [ -f /etc/mdadm.conf ] ; then
  copy /etc/mdadm.conf $WDIR/etc
fi

# install /usr/bin/busybox-static
install -m 0755 /usr/bin/busybox-static $WDIR/bin/busybox-static
cd $WDIR/bin/
for i in `$WDIR/bin/busybox-static --list | xargs | cut -d " " -f 3-`
do
        ln -s busybox-static $i
done

cd $WDIR/bin/
        ln -s busybox-static bb
        ln -s busybox-static busybox
        ln -s busybox-static bash
        ln -s busybox-static csh
        ln -s busybox-static ksh
cd


for f in $sbinfiles ; do
  ldd /sbin/$f | sed "s/\t//" | cut -d " " -f1 >> $unsorted
  copy $f $WDIR/sbin/$f
done



# Add lvm symlinks if appropriate
# Also copy the lvm.conf file
if  [ -x /bin/lvm ] ; then

cd $WDIR/bin
  ln -s lvm lvchange
  ln -s lvm lvrename
  ln -s lvm lvextend
  ln -s lvm lvcreate
  ln -s lvm lvdisplay
  ln -s lvm lvscan

  ln -s lvm pvchange
  ln -s lvm pvck
  ln -s lvm pvcreate
  ln -s lvm pvdisplay
  ln -s lvm pvscan

  ln -s lvm vgchange
  ln -s lvm vgcreate
  ln -s lvm vgscan
  ln -s lvm vgrename
  ln -s lvm vgck
  # Conf file(s)
  copyall /etc/lvm $WDIR/etc
fi

# Install libraries
sort $unsorted | uniq | while read library ; do
  if [ "$library" == "linux-vdso.so.1" ] ||
     [ "$library" == "linux-gate.so.1" ]; then
    continue
  fi

  copy $library $WDIR/lib/ >> /var/log/xen-tools/initramfs.log 2>&1
done

if [ -d /lib/udev ]; then
  copyall /lib/udev $WDIR/lib/ >> /var/log/xen-tools/initramfs.log 2>&1
fi
if [ -d /lib/systemd ]; then
  copyall /lib/systemd $WDIR/lib/ >> /var/log/xen-tools/initramfs.log 2>&1
fi

# Install the kernel modules if requested
if [ -n "$KERNEL_VERSION" ]; then
  find                                                                        \
     /lib/modules/$KERNEL_VERSION/kernel/{crypto,fs,lib}                      \
     /lib/modules/$KERNEL_VERSION/kernel/drivers/{block,ata,md}      \
     /lib/modules/$KERNEL_VERSION/kernel/drivers/{scsi,message,xen,block,virtio,base,rtc} \
     /lib/modules/$KERNEL_VERSION/kernel/drivers/usb/{host,storage}           \
     -type f 2> /dev/null | cpio --make-directories -p --quiet $WDIR >> /var/log/xen-tools/initramfs.log 2>&1

  copy /lib/modules/$KERNEL_VERSION/modules.{builtin,order}                     \
            $WDIR/lib/modules/$KERNEL_VERSION >> /var/log/xen-tools/initramfs.log 2>&1

  depmod -b $WDIR $KERNEL_VERSION >> /var/log/xen-tools/initramfs.log 2>&1
fi

# make the initramfs
make_initramfs >> /var/log/xen-tools/initramfs.log 2>&1

# Remove the temporary directory and file
cleanup

msg_end
#
# EOF
